# В ходе работы с модулем вы должны были выполнить следующие задания:
#
# [ 1 ] Создать новую страницу с адресом /news/, на которой должен выводиться
#           список всех новостей.
#
# [ 2 ] Вывести все статьи в виде заголовка, даты публикации и первых
#          20 символов текста.
#          Новости должны выводиться в порядке от более свежей к самой старой.
#
# [ 3 ] Сделать отдельную страницу для полной информации о статье
#          /news/<id новости>.
#          На этой странице должна быть вся информация о статье.
#          Название, текст и дата загрузки в формате день.месяц.год.
#
# [ 4 ] Написать собственный фильтр censor, который заменяет буквы
#          нежелательных слов в заголовках и текстах статей на символ «*».
#
# [ 5 ] Все новые страницы должны использовать шаблон default.html как основу.
# Как я создавал это проект

# Создаем виртуальное окружение
python -m venv venv

# Активируем виртуальное окружение
.\venv\Scripts\activate

# Устанавливаем библиотеки из requirements.txt (Django)
pip install -r requirements.txt

# Создаем проект с именем project
django-admin startproject project

# Переходим в папку project
cd .\project

# Создаем приложение, news
python manage.py startapp news +++

# project/settings.py
# 13 | from pathlib import Pash
# 14 | import os
# Добавляем приложение в settings.py
# INTALLED_APP → ‘ news ‘

# В TEMPLATES →
'DIRS': [os.path.join(BASE_DIR, 'news/templates/news'),], +++

# Создаем папку index.html с шаблонами в папке news (→ New → File → templates/news/index.html))
# Для этого нажимаем правой кнопкой мыши по news
# Выбираем New
# Выбираем File
# Вводим templates/flatpages/news.html
flatpages/post.html

# project/urls.py
# from django.contrib import admin
# from django.urls import path, include
#
# urlpatterns = [
	path(‘admin/’, admin.site.urls),
	path(‘ ’, include(‘news.urls’)),
# ]

# Создадим urls.py в папке news (→ New → Python File ) +++
# Для этого нажимаем правой кнопкой мыши по news
# Выбираем New
# Выбираем Python File
# Вводим urls.py

# New → Python File

# news\urls.py +++
# from django.contrib import admin
# from django.urls import path index
# from news.views import index
#
# urlpatterns = [
	path(‘index’, index)
# ]

# news\models.py +++
# from django.db import models
#
# class Category(models.Models):
#	name = models.CharField(max_length = 30, unique = True)
#	description = models.TextField()

# news\views.py +++
# from django.shortcuts import render
#
# def index(request):
#	render render(request, ‘index.html’)

# news\admin +++
# from django.contrib import admin
# from news.models import Category
#
# admin.site.register(Category)

# makemigrations проверяет модели на изменение
python manage.py makemigrations

# migrate вносит эти изменения
python manage.py migrate

# Запускаем сервер
python manage.py runserver

# Создадим superuser (супер пользователя)
python manage.py  createsuperuser
Username: admin
Password: admin
[y/N]: y

# Запускаем сервер
python manage.py runserver

# Переходим в админку)
# https://127.0.0.1:8000/admin
# Заходим
# по логину: admin
# паролю: admin

# Нажимаем на Categorys под news
# Name: Недвижимость
# Description: Дом,дачи,квартиры
# Нажимаем на  SAVE

# # Запускаем окно командной строки
python manage.py shell

from newapp.models import *
















#Типы полей
#
# AutoField - это счётчик
#
# BigIntegerField - это 16 разрядная длинное целое число,
#		            позволяет хранить очень большие числа от
#		            отрицательных до положительных.
#
# BoolenField - это Bool значение логические, (True, False)
#
# CharField - это строки
#
# DateField - это дата, поле даты
#
# DateTimeField  - это дата и время
#
# FloatField - это числа с плавающей точкой (13.56)
#
# IntegerField - это 32 разрядное целое число
#
# PositiveIntegerField - это 32 разрядное положительное число, может
#			         хранить только положительные числа ( от 0 → оо)
#
# PositiveSmallIntegerField - это 32 разрядное короткое положительно число,
#				       может хранить только положительные числа
#				       ( от 0 → 32 767)
#
# SlugField - это короткий заголовок или название, включающие символы
#	            только латиницы, цифр, - , _
#	            (Пример использование, как ссылки, чтобы генерировать ссылки
#	            к нашим моделям использовать их уже на Web приложений,
#	            то есть добавили какой нибудь товар, он использует другие поля
#                   генерирует вам SlugField, какую то ссылку и её использует, как
#	            URL адрес для этого товара)
#
# SmallIntegerField - это 16 разрядная короткое целое число
#			     ( от -32 767 до 32 767 )
#
# TextField - это большой текст
#
# TimeField - это время
#
